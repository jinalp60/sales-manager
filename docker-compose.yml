version: '3.4'

services:
  nginx-sm:
    image: nginx:1-alpine
    volumes:
      - './nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf'
    ports:
      - '8087:81'
    tty: true
    depends_on:
      - authentication
      - product
      - customer

  customer-db:
    restart: always
    #image : sameersbn/postgresql:10-1
    container_name: customer-db

    build: ./customer/customerDB/
    volumes:
      - ./customer/customerDB/migration.sql:/docker-entrypoint-initdb.d/migration.sql
    ports:
      - '5433:5432'

  product-db:
    restart: always
    #image : sameersbn/postgresql:10-1
    container_name: product-db
    build: ./product/productDB/
    volumes:
      - ./product/productDB/migration.sql:/docker-entrypoint-initdb.d/migration.sql
    ports:
      - '5432:5432'

  authentication:
    container_name: authentication
    build: ./authentication/
    volumes:
      - './authentication/:/src'
      # - './services/ms1/package.json:/usr/src/package.json'
    ports:
      - '8081:8081' # expose ports - HOST:CONTAINER
    environment:
      - NODE_ENV=${NODE_ENV}

  product:
    container_name: product
    build: ./product/
    volumes:
      - './product/:/src'
      #- './utils:/src'
      # - './services/ms2/package.json:/usr/src/package.json'
    ports:
      - '8082:8082' # expose ports - HOST:CONTAINER
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - authentication
      - product-db

  customer:
    container_name: customer
    build: ./customer/
    volumes:
      - './customer/:/src'
      #- './utils:/src'
      # - './services/ms2/package.json:/usr/src/package.json'
    ports:
      - '8083:8083' # expose ports - HOST:CONTAINER
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - authentication
      - customer-db
